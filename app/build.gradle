apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.meicun.appfactory"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    def keystoreFile = file('s.keystore.temp')
    def keystorePassword = ''
    def keystoreAlias = ''
    def keystoreAliasPassword = ''
    // default keystore file, PLZ config file path in key.properties

    Properties properties = new Properties()
    // key.properties file in the root director
    properties.load(project.rootProject.file('key.properties').newDataInputStream())
    def keystoreFilepath = properties.getProperty("keystore.path")

    if (keystoreFilepath) {
        keystoreFile = file(keystoreFilepath)
        keystorePassword = properties.getProperty("keystore.password")
        keystoreAlias = properties.getProperty("keystore.alias")
        keystoreAliasPassword = properties.getProperty("keystore.alias_password")
    }

    signingConfigs {
        debug {
            storeFile keystoreFile
            storePassword keystorePassword
            keyAlias keystoreAlias
            keyPassword keystoreAliasPassword
        }

        release {
            storeFile keystoreFile
            storePassword keystorePassword
            keyAlias keystoreAlias
            keyPassword keystoreAliasPassword
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false   //混淆
            shrinkResources false //移除无用的resource文件
            zipAlignEnabled true  //可以让安装包中的资源按4字节对齐，这样可以减少应用在运行时的内存消耗。
            buildConfigField "boolean", "LOG_DEBUG", "false" //是否显示Log

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }

    //指定apk名字输出格式
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            output ->
                outputFileName = "app-" + defaultConfig.versionName + "-" + variant.buildType.name + ".apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
